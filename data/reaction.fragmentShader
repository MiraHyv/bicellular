#version 330 core

//from image:
in vec2 UV;
uniform sampler2D tx;
uniform vec2[25] texelOffsets;

//from convolution filter:
uniform sampler2D map;
uniform float[25] convolutionMatrix;
uniform float convolutionLevel;
uniform float dryLevel;

out vec3 outColor;


void main() {
    //state: sum of neighbouring values
    
    vec2 state = vec2(0,0);
    for(int i=0; i<25; i++) {
        int y = i / 5;
        int x = i % 5;
        state += texture(tx, UV + texelOffsets[i]).rg * convolutionMatrix[i];
    }
    
    //look up from the map what value results from this state
    // does the state.xy span the whole map?
    vec2 value = texture(map, vec2(state.x, state.y)).rg * convolutionLevel;
    vec2 txValue = texture(tx, UV).rg * dryLevel;
    vec3 outValue;
    outValue.rg = value + txValue;
    outValue.b = 0;
    
    outColor = outValue;
    
}
